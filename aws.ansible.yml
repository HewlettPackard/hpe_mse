---
# 'MSE 2 nodes: ems and Pgsql database, refresh one node'
- name: create the instance(s)
  hosts: localhost
  vars:
    region: "{{ lookup('env','CLOUD_LOCATION') }}"
    instance_type: "{{ lookup('env','CLOUD_FLAVOR') }}"
    image: "{{ lookup('env','CLOUD_IMAGE') }}"
    ssh_key: "{{ lookup('env','CLOUD_SSH_KEY_PAIR') }}"

  tasks:
  - name: start the instance pgsql
    ec2:
      image: '{{ image }}'
      region: '{{ region }}'
      instance_type: '{{ instance_type }}'
      key_name: '{{ ssh_key }}'
      group: [mse]
      instance_tags: { Name: pgsql, type: base }
      exact_count: 1
      count_tag: { Name: pgsql }
      wait: yes
    register: ec2
  - name: add instance to the base group
    add_host: hostname={{ item.public_dns_name }} groups=base nick_name=pgsql
    with_items: '{{ ec2.tagged_instances }}'
    when: item.public_dns_name is defined
  - name: wait for ssh
    wait_for: host={{ item.public_dns_name }} port=22 search_regex=OpenSSH
    with_items: '{{ ec2.instances }}'
    when: item.public_dns_name is defined

  - name: start the instance ems
    ec2:
      image: '{{ image }}'
      region: '{{ region }}'
      instance_type: '{{ instance_type }}'
      key_name: '{{ ssh_key }}'
      group: [mse]
      instance_tags: { Name: ems, type: base }
      exact_count: 1
      count_tag: { Name: ems }
      wait: yes
    register: ec2
  - name: add instance to the base group
    add_host: hostname={{ item.public_dns_name }} groups=base,ems nick_name=ems
    with_items: '{{ ec2.tagged_instances }}'
    when: item.public_dns_name is defined
  - name: wait for ssh
    wait_for: host={{ item.public_dns_name }} port=22 search_regex=OpenSSH
    with_items: '{{ ec2.instances }}'
    when: item.public_dns_name is defined


- name: configure the base instance(s)
  hosts: base
  become: True
  gather_facts: True
  handlers:
  - name: refresh MSE instance
    raw: echo $(date) Refresh deferred to the ems node > /var/opt/OC/iso/refresh_trigger.log
  vars:
    # From the environment
    engineIso: "{{ lookup('env','MSE_ENGINE') }}"
    mseProduct: "{{ lookup('env','MSE_PRODUCT') }}"
    isoUrl: "{{ lookup('env','MSE_ISO_URL') }}"
    yumRepo: 'centos*,updates*,base*'
    sshKeysUrl: "{{ lookup('env','MSE_SSH_KEYS_URL') }}"
    # From the inventory
    theNode: "{{hostvars[inventory_hostname]['nick_name']}}"
    theNodeHostname: "{{hostvars[inventory_hostname]['ansible_fqdn']}}"
    theNodeIpAddress: "{{hostvars[inventory_hostname]['ansible_default_ipv4']['address']}}"
    # MSE constants
    isoRepo: '/var/opt/OC/iso/'
    isoMountPoint: '/media/cdrom/'
  roles:
    - role: base

- name: configure the ems instance
  hosts: ems
  become: True
  gather_facts: True
  roles:
    - role: ems
  handlers:
  - name: refresh MSE instance
    raw: service nivr-nfv status && service nivr-nfv node-reload && service nivr-nfv start || echo Refresh unavailable, skipped
  vars:
    descriptor: |
      # -------------------------------------------------------------
      # MSE 2 nodes: ems and Pgsql database, refresh one node
      # MSE Descriptor generated by the builder 2018-10-05 Version 3.0
      # Build date: Fri Oct 05 2018 10:26:59 GMT+0200 (heure d’été d’Europe centrale)
      # PRE REQUISISTES ON THE NODE RUNNING THE MSE AUTOMATED DEPLOYER
      # 1. The management network is up and running
      # 2.1 The command 'hostname' returns a fully qualified domain name used for node identification within the cluster
      # 2.2 The command 'hostname -i' returns the node IPV4 address on the MGMT network
      # OR
      # 2. /etc/sysconfig/network has a fully qualified domain name at the HOSTNAME entry
      # 3. MSE bits are available as:
      # 3.1 ISOs images on the file system in /var/opt/OC/iso or 
      # 3.2 YUM repositories listed in YUM_REPO_LIST and IS_YUM_REPO=yes
      # -------------------------------------------------------------
      
      
      # ------------------------------- #
      # Network interfaces definition   #
      # ------------------------------- #
      MGMT_DEVICE=eth0
      MGMT_NETMASK=255.255.248.0
      
      # ------------------------------- #
      # Nodes and roles definition      #
      # ------------------------------- #
      
      # VNF Element Manager      #
      NIVR_EMS_NAME=_%_ems_hostname_%_
      NIVR_EMS_IP_ADDR=_%_ems_ipaddress_%_
      
      # ------------------------------- #
      # SEE Clusters                    #
      # ------------------------------- #
      # SEE Simplex      #
      # SEE Primary      #
      
      # SEE Secondary      #
      
      # SEE Witness      #
      
      # SEE additional nodes      #
      
      # HTTP Load Balancer Primary node   #
      
      # HTTP Load Balancer Secondary node   #
      
      # HTTP Load balancer virtual IP      #
      SEE_VIP_NAME=${VHTTP_NAME}
      RSLMF_VIP_NAME=${VHTTP_NAME}
      
      # Pgsql database
      # -Standalone: one single entry pointing to the Pgsql node
      # -Linux HA: one single entry defining the VIP of the Pgsql resource
      # -Static cluster: list of SEE nodes co-locating Pgsql, the first being the initial master
      PGSQL_HOST=( _%_pgsql_hostname_%_ )
      PGSQL_IP_ADDR=( _%_pgsql_ipaddress_%_ )
      
      #-------------------------------------------------#
      # Groups for service continuity upon upgrade
      # IP addresses preferred to address unresolved names
      #--------------------------------------------------#
      NIVR_REFRESH_SCHEDULE=(
      	_%_pgsql_ipaddress_%_ \
      )
      
      # ------------------------------- #
      # Security                        #
      # ------------------------------- #
      # Certification authority for self signed certificates
      CERT_AUTH_ALIAS="nfvCert"
      # Certification authority password
      CERT_AUTH_PASSWORD="nfvCert"
      # Password for Linux HA administrator account (hacluster) and Redis access control; enforced for all Redis resources, default value: hacluster
      NIVRDB_LINUXHA_PASSWORD="hacluster"
      
      # ------------------------------- #
      # Miscellaneous properties        #
      # ------------------------------- #
      # node collecting SNMP traps emitted by all the VNF members, typically the VNF EMS
      SNMP_TRAP_DESTINATION="${NIVR_EMS_IP_ADDR}"
      # YUM repositories list
      YUM_REPO_LIST=centos*,updates*,base*
      [ "$YUM_REPO_LIST" != "" ] && IS_YUM_REPO=yes || IS_YUM_REPO=no
      
      # ------------------------ #
      # Redis Sentinel Instances #
      # ------------------------ #
      
      # ------------------------------- #
      #    OCSNF policy                 #
      # ------------------------------- #
      
      # -------------------- #
      # SEE lite services    #
      # -------------------- #
      
      # ------------------------------- #
      #       Messaging Framework       #
      # ------------------------------- #
      
      # ------------------------------- #
      #       Messaging Gateway       #
      # ------------------------------- #
      
      # ------------------------------- #
      #    Messaging Gateway Services   #
      # ------------------------------- #
      
      # ------------------------------- #
      # OCCP countries                  #
      # ------------------------------- #
      
      # ------------------------------- #
      # OCCP switching points           #
      # ------------------------------- #
      
      # ------------------------------- #
      # OCCP media servers              #
      # ------------------------------- #
      
      # ------------------------------- #
      #  TCAP connectivity providers    #
      # ------------------------------- #
      
      # ------------------------------- #
      # MRF adapters                    #
      # ------------------------------- #
      
      # ------------------------------- #
      # Diameter     providers          #
      # ------------------------------- #
      
      # ------------------------------- #
      # Ucp and Smpp providers          #
      # ------------------------------- #
      
      # ------------------------------- #
      # SMPP sessions                   #
      # ------------------------------- #
      
      # ------------------------------- #
      # SMPP profiles                   #
      # ------------------------------- #
      
      # ------------------------------- #
      # SMPP pairs                      #
      # ------------------------------- #
      
      # ------------------------------- #
      # JDBC and LDAP data sources      #
      # ------------------------------- #
      
      # ------------- #
      # LDAP profiles #
      # ------------- #
      
      # --------------- #
      # SOAP connectors #
      # --------------- #
      
      # ------------------------- #
      # SOAP Web Services Servers #
      # ------------------------- #
      
      # -----------------------#
      # SOAP Security Policies #
      # -----------------------#
      
      # ----------------- #
      # SOAP Web Services #
      # ----------------- #
      
      # ----------------- #
      # XMLRPC connectors #
      # ----------------- #
      
      # ----------------- #
      # XMLRPC Services   #
      # ----------------- #
      
      # ----------------- #
      # XMLRPC Servers    #
      # ----------------- #
      
      # ------------------------------- #
      # Activable Native Applications   #
      # ------------------------------- #
      # NIVR database type mysql|pgsql|oracle  
      ACTIVATE_APPLI_NIVR=no
      ACTIVATE_APPLI_CAASIVR=no
      ACTIVATE_OCCP_SNTS=no
      
      # ------------------------------- #
      # WebRTC                           #
      # ------------------------------- #
      
      # ----------------- #
      # Licensing         #
      # ------------------#
      # SIP stack licensing serial number for SEE and OCMP
      SEE_SIP_SERIAL="09n606-z8EyFB-UVWX55-UUON59-D0YM3A-TUUU55"
      # SIP stack licensing codeword for SEE and OCMP
      SEE_SIP_CODEWORD="0JiK03-z95QF5-89ABFF-88E1F3-RMq090-A688FF-FOE83F-1t%83C"
      # OCMP BRE license key
      OCMP_BRE_LIC_KEY="16h9ibak"
      # OCMP BRE license expiration date
      OCMP_BRE_LIC_EXPIRES="never"
      # OCMP BRE license description
      OCMP_BRE_LIC_DESCRIPTION="GoldHpOnly"
      # OCMP BRE license number of Vxml instances
      OCMP_BRE_LIC_VXML_INSTANCES="1000"
      # OCMP BRE license number of automatic speech recognition instances
      OCMP_BRE_LIC_ASR_INSTANCES="unlimited"
      # OCMP BRE license number of text to speech instances
      OCMP_BRE_LIC_TTS_INSTANCES="unlimited"
      # OCMP BRE license feature name
      OCMP_BRE_LIC_FEATURE_NAME="CertificateID.HPInternal"
      # OCMP BRE license number of feature instances
      OCMP_BRE_LIC_FEATURE_INSTANCES="unlimited"
      # SIP stack licensing codeword for OCMP same as SEE
      OCMP_SIPLIC_SERIAL=${SEE_SIP_SERIAL}
      OCMP_SIPLIC_CODEWORD=${SEE_SIP_CODEWORD}
      
      
      # --------------------------------------------------- #
      # Node receiving outgoing calls from SMB WebRTC client
      # Default: the NFV installed SIP load balancer VIP 
      # --------------------------------------------------- #
      WEBRTC_CALLEE_NAME=${VSIP_NAME}
      WEBRTC_CALLEE_IP_ADDR=${VSIP_IP_ADDR}
      
      # Optional list of RPM packages providing specific prompts
      APP_PROMPTS="/var/opt/OC/iso/hpoc-smb-demo-prompts*.rpm"
      
      # ------------------------------- #
      # Various database passwords 
      # ------------------------------- #
      # pgsql
      NIVRDB_OCDBROOT_PASSWORD=ocdbroot
      NIVRDB_OCDBREP_PASSWORD=ocdbrep
      NIVRDB_OCDBADMIN_PASSWORD=ocdbadmin
      NIVRDB_OCDBACCESS_PASSWORD=ocdbaccess
      NIVRDB_APPADMIN_PASSWORD=appadmin
      NIVRDB_APPACCESS_PASSWORD=appaccess
      
      # mysql: force strong passwords
      if [[ "$NIVR_DB_TYPE" == "mysql" ]] ; then
      NIVRDB_ROOT_PASSWORD=HP1nvent!
      NIVRDB_OCDBACCESS_PASSWORD=${NIVRDB_ROOT_PASSWORD}
      NIVRDB_OCDBREP_PASSWORD=${NIVRDB_ROOT_PASSWORD}
      fi
      
      
      # oracle
      TPDM_TABLESPACE=NFVTPDM_TS
      AAA_TABLESPACE=NFVAAA_TS
      MCM_TABLESPACE=NFVMCM_TS
      MCS_TABLESPACE=NFVMCS_TS
      SMB_TABLESPACE=NFVSMB_TS
      
      # Reporting System 
      NIVRDB_CCPS_DS_PASSWORD=CCPS_DS
      NIVRDB_CCPS_PASSWORD=CCPS
      NIVRDB_CCXML_PASSWORD=CCXML
      NIVRDB_EBRS_DS_PASSWORD=EBRS_DS
      NIVRDB_EBRS_QRTZ_PASSWORD=EBRS_QRTZ
      NIVRDB_EBRS_QRTZ_DS_PASSWORD=EBRS_QRTZ_DS
      NIVRDB_EBRS_PASSWORD=EBRS
      NIVRDB_JBOSS_JMS_PASSWORD=JBOSS_JMS
      NIVRDB_MSCML_PASSWORD=MSCML
      NIVRDB_REPORT_USER_PASSWORD=REPORT_USER
      NIVRDB_VXML_PASSWORD=CRYSTAL
      NIVRDB_QRTZ_DS_PASSWORD=QRTZ_DS
      NIVRDB_QRTZ_PASSWORD=QRTZ
      
      # ----------------------
      # USPM ISO image Details
      # ----------------------
      USPM_ISO_PATH=$(ls /var/opt/OC/iso/USPM*.iso 2> /dev/null)
      
      # Enable refresh by not deleting root ssh keys at the end of installation
      RETAIN_SSH_KEYS_ROOT=YES
      
      #-------------------------------------------
      # Legacy management based on MSE connectors 
      # Used to enable/disable features           
      #-------------------------------------------
      _legacySEE() {  command -v install-mse-connectors.sh install-mse_connectors.sh > /dev/null || test -f /var/opt/OC/iso/OpenCall-SEE*.iso && return 0 || return 1 ; }
      # NIVR and CaaS IVR: activate on SEE3 only
      # Messaging Framework, redis and all emscli resources: disable on SEE3
      if _legacySEE ; then
      MESSAGING_FRAMEWORK_SERVICE_COMPONENT_NAME=
      MESSAGING_GATEWAY_SERVICE_COMPONENT_NAME=
      ACTIVATE_APPLI_MESSAGING_FRAMEWORK=no
      ACTIVATE_APPLI_MESSAGING_GATEWAY=no
      TCAP_PROVIDER_NAME=()
      DIAMETER_SERVICE_COMPONENT_NAME=()
      UCP_PROVIDER_NAME=()
      SMPP_PROVIDER_NAME=()
      MRF_ADAPTER_SERVICE_COMPONENT_NAME=()
      DATASOURCE_NAME=()
      LDAP_PROFILE_NAME=()
      SOAP_SERVICE_COMPONENT_NAME=()
      SOAP_WSS_NAME=()
      SOAP_SECURITY_NAME=()
      SOAP_WS_NAME=()
      REDIS_HOST=()
      REDIS_IP_ADDR=()
      REDIS_INSTANCE_ID=()
      REDIS_PORT=()
      OCCP_SWITCHING_POINT=()
      OCCP_MEDIA_SERVER=()
      XMLRPC_SERVICE_COMPONENT_NAME=()
      XMLRPC_SERVICE=()
      XMLRPC_SERVER_ADDR=()
      else
      # NIVR native applications supported only on PostgreSQL database without WebRTC on SEE > 3
      ACTIVATE_APPLI_NIVR=$([[ $WEBRTC_SIGNALING_IP_ADDR == '' ]] && [[ $NIVR_DB_TYPE == 'pgsql' ]] && echo $ACTIVATE_APPLI_NIVR || echo no)
      ACTIVATE_APPLI_CAASIVR=no
      ACTIVATE_OCCP_SNTS=no
      fi
      
      # +++ EOF +++ # Do not delete this line